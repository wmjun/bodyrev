buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.flywaydb:flyway-gradle-plugin:3.2.1')
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
    }
}

apply plugin: 'org.flywaydb.flyway'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-boot'


jar {
    baseName = 'bodyrev'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
}

//QueryDSL
sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.provided
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {
    module {
        sourceDirs += file('src/main/generated')
    }
}

//Flyway
flyway {
    driver = 'com.mysql.jdbc.Driver'
    url = 'jdbc:mysql://localhost:3306/bodyrev?useUnicode=true&charaterEncoding=utf-8'
    user = 'root'
    password = ''
}

//Defaults
repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('org.projectlombok:lombok:1.16.6')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.mysema.querydsl:querydsl-jpa:3.6.3')
    compile('com.mysema.querydsl:querydsl-apt:3.6.3:jpa')
    compile('mysql:mysql-connector-java:5.1.34')
    compile('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.2.9')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    //hibernate 필요할때 넣을 것
    //    compile('org.hibernate:hibernate-entitymanager:4.3.8.Final')
    //    compile('org.hibernate:hibernate-core:4.3.10.Final')
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
